#!/bin/bash
# CS 302, assignment #7 test script.

# ---------------------------------------------------------
# Initial checks.
#	Ensure executable file exists.

if [ -z $1 ]; then
	echo "Error, must provide executable file name."
	exit
fi

if [ ! -e $1 ] || [ ! -x $1 ]; then
	echo "Error, unable to find $1 executable file."
	exit
fi
#
if [ ! -e movies.txt ]; then
	echo "Error, unable to find movies input file."
	exit
fi
#
if [ ! -e mstrAssocTest.txt ]; then
	echo "Error, unable to find hash testing verification files."
	exit
fi
#
if [ ! -e mstrOut.txt ] || [ ! -e mstrConsole.txt ]; then
	echo "Error, unable to find test input files 2."
	exit
fi
#
# ---------------------------------------------------------
# Define script variables and function

bolded=`tput bold`
normal=`tput sgr0`

pause() {
	if [ "$1" = "skip" ]; then
		echo
	else
		echo
		echo -n "Press return to continue"
		read
		clear
	fi
}

# ---------------------------------------------------------
# Display initial page

clear
echo
echo
echo ${bolded}Assignment 5 - Testing Script${normal}
echo
echo
echo
echo
echo "Note, this utility assumes the program is working or very"
echo "      close to working.  Testing on an incomplete"
echo "      program will not be useful."
echo
echo
echo
echo
pause $2
# ---------------------------------------------------------
# skip command line arguments tests...
#
if [ ! "$2" == "ex" ]; then
#
# ---------------------------------------------------------
# Begin tests command line tests.
#
clear
#
echo -e "**********************************************************************"
echo "Basic Tests for Associative Array / Hash Table."
echo
#
./assocTest > tmpAssoc.txt
#
echo
echo
echo
if `diff tmpAssoc.txt mstrAssocTest.txt >/dev/null` ; then
	echo "Associative Array Test Output Correct"
else
	diff tmpAssoc.txt mstrAssocTest.txt
fi
#
#
echo
echo
echo
echo
echo
echo
pause $2
echo
echo -e "\n**********************************************************************"
echo "Tests for program line argument tests."
echo
# -----
# Initial checks for usage message and argument counts
echo "-------------------------------"
echo "Initial checks for usage message and argument counts"
echo
#
echo
echo "${bolded}Test -> should show usage message${normal}"
echo "./"$1""
./$1
#
echo
echo
echo "${bolded}Test -> should show invalid command line options.${normal}"
echo "./"$1" -none"
./$1 -none
#
echo
echo "${bolded}Test -> should show invalid command line options.${normal}"
echo "./"$1" -i movies.txt"
./$1 -i file1.txt -o file2.txt -extra
#
#
echo
echo
pause $2
#
echo
echo -e "\n**********************************************************************"
echo "Tests for line argument specifiers."
echo
echo "${bolded}Test -> should show Error, invalid input file specifier.${normal}"
echo "${bolded}./$1 -in movies.txt -o tmp.txt${normal}"
./$1 -in movies.txt -o tmp.txt
#
echo
echo "${bolded}Test -> should show Error, invalid intput file specifier.${normal}"
echo "${bolded}./$1 -o tmp.txt -o tmp.txt${normal}"
./$1 -o tmp.txt -o tmp.txt
#
echo
echo
echo "${bolded}Test -> should show Error, invalid output file specifier.${normal}"
echo "${bolded}./$1 -i movies.txt -out tmp.txt${normal}"
./$1 -i movies.txt -out tmp.txt
#
echo
echo "${bolded}Test -> should show Error, invalid output file specifier.${normal}"
echo "${bolded}./$1 -i movies.txt -i tmp.txt${normal}"
./$1 -i movies.txt -i tmp.txt
#
echo
echo
pause $2
#
# -----
#
echo
echo -e "\n**********************************************************************"
echo "Tests for command line argument file name tests."
echo
#
echo "${bolded}Test -> should show Error, unable to find input file.${normal}"
echo "${bolded}./$1 -i none.txt -o tmp.txt${normal}"
./$1 -i none.txt -o tmp.txt
#
echo
echo "${bolded}Test -> should show Error, unable to open input file.${normal}"
echo "${bolded}./$1 -i movieRatings -o tmp.txt${normal}"
./$1 -i moviesRatings -o tmp.txt
#
#
echo
echo "creating non accessable test file..." > nonAccessableFile.txt
chmod -rw nonAccessableFile.txt
echo
echo "${bolded}Test -> should show Error, unable to output file.${normal}"
echo "${bolded}./$1 -i movies.txt -o nonAccessableFile.txt${normal}"
./$1 -i movies.txt -o nonAccessableFile.txt
#
chmod +rw nonAccessableFile.txt
rm nonAccessableFile.txt
#
echo
echo
#
pause $2
#
fi
#
# -----
#
echo -e "\n**********************************************************************"
echo "Execution tests."
echo "     This may take a while..."
echo
echo
echo
#
echo "${bolded}./$1 -i movies.txt -o tmp.txt > out.txt${normal}"
./$1 -i movies.txt -o tmp.txt > out.txt
#
if `diff out.txt mstrConsole.txt >/dev/null` ; then
	echo "Movie Ratings -> Console Output Correct."
else
	echo "Movie Ratings -> Console Output Incorrect."
	diff out.txt mstrConsole.txt
fi
#
if `diff tmp.txt mstrOut.txt >/dev/null` ; then
	echo "Movie Ratings -> Output Correct."
else
	echo "Movie Ratings -> Output Incorrect."
	diff tmp.txt mstrOut.txt
fi
#
# -----
#
echo
echo
echo
#
echo "${bolded}./$1 -o tmp.txt -i movies.txt > out.txt${normal}"
./$1 -o tmp.txt -i movies.txt > out.txt
#
if `diff out.txt mstrConsole.txt >/dev/null` ; then
	echo "Movie Ratings -> Console Output Correct (2)."
else
	echo "Movie Ratings -> Console Output Incorrect (2)."
	diff out.txt mstrConsole.txt
fi
#
if `diff tmp.txt mstrOut.txt >/dev/null` ; then
	echo "Movie Ratings -> Output Correct (2)."
else
	echo "Movie Ratings -> Output Incorrect (2)."
	diff tmp.txt mstrOut.txt
fi
#
echo
echo
echo
#
# -----
#  Final test with valgrind
#
pause $2
#
echo -e "\n**********************************************************************"
echo "Final test - check for memory leaks."
echo
echo "   Should show: \"All heap blocks were freed -- no leaks are possible\""
echo
echo
#
echo "${bolded}valgrind ./assocTest > tmpAssoc.txt${normal}"
valgrind ./assocTest > tmpAssoc.txt
#
echo
echo
#
echo "${bolded}valgrind ./$1 -o tmp.txt -i movies.txt > out.txt${normal}"
valgrind ./$1 -i movies.txt -o tmp.txt > out.txt
#
#
# -----
#  clean-up
#
rm	tmp.txt
rm	out.txt

